// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  password  String
  expenses  Expense[]
  sessions  Session[]
  accounts  Account[]
  tokens    Authtoken[] // Add this field for the reverse relation
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Category  Category[]
}

model Expense {
  id          String   @id @default(cuid())
  title       String
  description String?
  amount      Float
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  sessionToken String   @unique
  expires      DateTime
}

model Account {
  id        String   @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  expenses  Expense[]
  userId    String
  User      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Xyz {
  id    String  @id @default(cuid())
  scope String?
}

model Authtoken {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  identifier String   @unique
  token      String
  expires    DateTime
}
