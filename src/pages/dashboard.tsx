import Cookies from "js-cookie";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { BsFunnel } from "react-icons/bs";
import Button from "~/components/common/button";
import Analytics from "~/components/dashboard/Analytics";
import ProfileCard from "~/components/dashboard/ProfileCard";
import Transactions from "~/components/dashboard/Transactions";


type User = {
  name: string;
  email: string;
  password: string;
  createdAt: string;
  updatedAt: string;
  id: string;
};

export default function Dashboard() {
  const [user, setUser] = useState<User | null>(null);
  const [token, setToken] = useState<string | null>(null);
  const [query, setQuery] = useState<string | null | Date>(null);

  const router = useRouter();

  useEffect(() => {
    const temp_token = Cookies.get("token");
    const temp_user = Cookies.get("user");

    if (!temp_token || !temp_user) {
      void router.push("/");
      return;
    }

    setToken(temp_token);

    try {
      const parsedUser = JSON.parse(temp_user) as User | null;
      setUser(parsedUser);
    } catch (error) {
      console.error("Error parsing user JSON:", error);
      setUser(null);
    }
  }, [router]);

  return (
    <>
      <Head>
        <title>Expenso - Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center justify-center bg-[#f1f1f1] py-10">
        <div className="min-h-screen w-full max-w-[1024px] rounded-lg bg-white shadow-sm">
          {token && user && <ProfileCard user={user} />}
          <hr />
          <section className="w-full rounded-lg py-8 px-12">
            <div className="flex flex-col items-center space-y-4 md:flex-row md:space-x-4 md:space-y-0">
              {/* Income Button */}
              <Button
                title="Income"
                classNameBtn="px-6 py-2 text-white bg-blue-500 rounded-lg hover:bg-blue-700 transition-all"
                onclick={() => setQuery("income")}
              />

              {/* Expenses Button */}
              <Button
                title="Expenses"
                classNameBtn="px-6 py-2 text-white bg-blue-900 rounded-lg hover:bg-blue-950 transition-all"
                onclick={() => setQuery("expense")}
              />

              {/* Date Picker */}
              <div className="relative w-full max-w-xs">
                <label htmlFor="date" className="sr-only">
                  Date
                </label>
                <input
                  type="date"
                  name="date"
                  id="date"
                  className="w-full rounded-lg border border-gray-300 bg-white px-4 py-2 text-gray-700 shadow-sm focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400"
                  onChange={(event) => { setQuery(new Date(event.target.value)) }}
                />
              </div>

              {/* Search Input */}
              <div className="relative w-full max-w-md">
                <label htmlFor="search" className="sr-only">
                  Search
                </label>
                <input
                  type="search"
                  name="search"
                  id="search"
                  placeholder="Search..."
                  className="w-full rounded-lg border border-gray-300 bg-white px-4 py-2 text-gray-700 shadow-sm focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400"
                  onChange={(e) => { setQuery(e.target.value) }}
                />
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="absolute right-3 top-3 h-5 w-5 text-gray-400"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M21 21l-4.35-4.35m2.65-5.65a7.5 7.5 0 11-15 0 7.5 7.5 0 0115 0z"
                  />
                </svg>
              </div>
              <Button
                title={<BsFunnel />}
                classNameBtn="px-6 py-2 text-white bg-blue-900 rounded-lg hover:bg-blue-950 transition-all"
                onclick={() => setQuery("")}
              />
            </div>
          </section>
          <hr />
        <section className="w-full rounded-lg py-8 px-12">
          {
            user?.id && <Analytics userId={user.id} />
          }
        </section>
        <hr />
        <section className="w-full rounded-lg py-8 px-12">
          {
            user?.id && <Transactions userId={user.id} searchQuery={query}/>
          }
        </section>
        </div>
      </main>
    </>
  );
}
