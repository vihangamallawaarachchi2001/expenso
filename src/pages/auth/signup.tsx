import Cookies from "js-cookie";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";
import { toast, ToastContainer } from "react-toast";
import Button from "~/components/common/button";
import { api } from "~/utils/api";

export default function Signup() {
    
  // Form state management
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [name, setName] = useState('');

    const router = useRouter();

    const mutation = api.user.register.useMutation({
        onSuccess: async (data) => {
            Cookies.set("token", data.token, {
                secure: true,
                httpOnly: false,
                sameSite: "strict",
                expires: 7,
            })

            Cookies.set("user", JSON.stringify(data.user), {
                secure: true,
                httpOnly: false,
                sameSite: "strict",
                expires: 7,
            })

            toast.success(data.message)

            await router.push("/dashboard")
        },
        onError: (error) => {
            toast.error(error.message || "Registration failed!")
        }
    })

    const handleRegister = async () => {
        if (!email || !password|| !name ) {
            toast.warn("Please fill in all fields!");
            return;
          }

          try {
            await mutation.mutateAsync({ email, password, name })
          } catch (error) {
            console.error(error);
          }
    }

    return(
        <>
            <Head>
                <title>Expenso - signup</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="flex items-center justify-center w-full h-screen bg-gray-100">
                <form className="min-w-96 max-w-[440px] w-full bg-white rounded-lg shadow-xl p-10 space-y-8">
                    {/* Form Header */}
                    <div className="text-center">
                    <h1 className="text-3xl font-semibold text-gray-800 mb-6">Welcome</h1>
                    <p className="text-lg text-gray-600">Please signup to continue</p>
                    </div>
                    
                    {/* name Input */}
                    <div className="flex flex-col items-start justify-center space-y-2">
                    <label htmlFor="name" className="text-lg font-semibold text-gray-700">name</label>
                    <input
                        type="name"
                        name="name"
                        id="name"
                        className="w-full px-4 py-2 border-2 border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                        onChange={(e) => setName(e.target.value)}
                        value={name}
                        required
                        placeholder="Enter your name"
                    />
                    </div>

                    {/* Email Input */}
                    <div className="flex flex-col items-start justify-center space-y-2">
                    <label htmlFor="email" className="text-lg font-semibold text-gray-700">Email</label>
                    <input
                        type="email"
                        name="email"
                        id="email"
                        className="w-full px-4 py-2 border-2 border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                        onChange={(e) => setEmail(e.target.value)}
                        value={email}
                        required
                        placeholder="Enter your email"
                    />
                    </div>

                    {/* Password Input */}
                    <div className="flex flex-col items-start justify-center space-y-2">
                    <label htmlFor="password" className="text-lg font-semibold text-gray-700">Password</label>
                    <input
                        type="password"
                        name="password"
                        id="password"
                        className="w-full px-4 py-2 border-2 border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                        onChange={(e) => setPassword(e.target.value)}
                        value={password}
                        required
                        placeholder="Enter your password"
                    />
                    </div>

                    {/* Forgot Password Link */}
                    <div className="w-full flex items-center justify-end">
                    <Link href="/auth/forgot-password" className="font-medium text-lg text-blue-600 hover:text-blue-700">
                        Forgot password?
                    </Link>
                    </div>

                    {/* Submit Button */}
                    <Button
                    title="Signup"
                    onclick={() => handleRegister()}
                    classNameBtn="w-full py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-all ease-in-out duration-300"
                    />

                <p className="text-center text-gray-600"> have an account?<Link href={'/'}>Login</Link> </p>
                </form>



                {/* Toast Container for notifications */}
                <ToastContainer />
                </main>
        </>
    )
}